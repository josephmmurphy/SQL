#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January?
SELECT COUNT(distinct orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT COUNT(distinct orderID) 
FROM BIT_DB.JanSales
WHERE product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT distinct customers.acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT product, SUM(quantity)* price AS revenue
FROM BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(quantity)*price AS revenue, SUM(quantity), product
FROM BIT_DB.FebSales
WHERE location LIKE '548 Lincoln St%'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct customers.acctnum)
, AVG(FebSales.quantity*FebSales.price) AS avg_amnt_spent
FROM BIT_DB.customers

LEFT JOIN BIT_DB.FebSales
ON customers.order_id=FebSales.orderid
WHERE FebSales.quantity > 2
AND length(customers.order_id) = 6
AND customers.order_id <> 'Order ID';
